<% content_for :title, "Single Estimation Result" %>

<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <div class="mb-8">
    <div class="flex items-center justify-between">
      <h1 class="text-3xl font-bold text-gray-900">Single Estimation Result</h1>
      <%= link_to "← Back to Estimator", ai_usage_estimator_index_path, 
            class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50" %>
    </div>
    <p class="mt-2 text-gray-600">Estimated usage and costs for your AI job</p>
  </div>

  <!-- Cost Summary Card -->
  <div class="bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg shadow-lg p-8 text-white mb-8">
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
      <div class="text-center">
        <div class="text-3xl font-bold">$<%= sprintf("%.4f", @estimation[:total_cost]) %></div>
        <div class="text-blue-100">Total Cost</div>
      </div>
      <div class="text-center">
        <div class="text-3xl font-bold"><%= number_with_delimiter(@estimation[:total_tokens]) %></div>
        <div class="text-blue-100">Total Tokens</div>
      </div>
      <div class="text-center">
        <div class="text-xl font-semibold"><%= @estimation[:model] %></div>
        <div class="text-blue-100">Model</div>
      </div>
      <div class="text-center">
        <div class="text-xl font-semibold"><%= @estimation[:provider].capitalize %></div>
        <div class="text-blue-100">Provider</div>
      </div>
    </div>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
    <!-- Left Column: Details -->
    <div class="space-y-6">
      <!-- Token Breakdown -->
      <div class="bg-white shadow rounded-lg p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Token Breakdown</h3>
        <div class="space-y-4">
          <div class="flex justify-between items-center p-3 bg-gray-50 rounded">
            <span class="text-sm font-medium text-gray-700">Input Tokens</span>
            <span class="text-lg font-semibold text-gray-900"><%= number_with_delimiter(@estimation[:input_tokens]) %></span>
          </div>
          <div class="flex justify-between items-center p-3 bg-gray-50 rounded">
            <span class="text-sm font-medium text-gray-700">Estimated Output Tokens</span>
            <span class="text-lg font-semibold text-gray-900"><%= number_with_delimiter(@estimation[:output_tokens]) %></span>
          </div>
          <div class="border-t pt-3">
            <div class="flex justify-between items-center p-3 bg-blue-50 rounded">
              <span class="text-sm font-medium text-blue-700">Total Tokens</span>
              <span class="text-lg font-semibold text-blue-900"><%= number_with_delimiter(@estimation[:total_tokens]) %></span>
            </div>
          </div>
        </div>
      </div>

      <!-- Cost Breakdown -->
      <div class="bg-white shadow rounded-lg p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Cost Breakdown</h3>
        <div class="space-y-4">
          <div class="flex justify-between items-center p-3 bg-gray-50 rounded">
            <span class="text-sm font-medium text-gray-700">Input Cost</span>
            <span class="text-lg font-semibold text-gray-900">$<%= sprintf("%.6f", @estimation[:cost_breakdown][:input_cost]) %></span>
          </div>
          <div class="flex justify-between items-center p-3 bg-gray-50 rounded">
            <span class="text-sm font-medium text-gray-700">Output Cost</span>
            <span class="text-lg font-semibold text-gray-900">$<%= sprintf("%.6f", @estimation[:cost_breakdown][:output_cost]) %></span>
          </div>
          <div class="border-t pt-3">
            <div class="flex justify-between items-center p-3 bg-green-50 rounded">
              <span class="text-sm font-medium text-green-700">Total Cost</span>
              <span class="text-lg font-semibold text-green-900">$<%= sprintf("%.6f", @estimation[:cost_breakdown][:total_cost]) %></span>
            </div>
          </div>
        </div>

        <!-- Pricing Information -->
        <div class="mt-4 p-3 bg-gray-50 rounded">
          <h4 class="text-sm font-medium text-gray-700 mb-2">Pricing (per 1,000 tokens)</h4>
          <div class="text-xs text-gray-600 space-y-1">
            <div>Input: $<%= sprintf("%.4f", @estimation[:cost_breakdown][:pricing_per_1k][:input]) %></div>
            <div>Output: $<%= sprintf("%.4f", @estimation[:cost_breakdown][:pricing_per_1k][:output]) %></div>
          </div>
        </div>
      </div>

      <!-- Actions -->
      <div class="bg-white shadow rounded-lg p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Actions</h3>
        <div class="space-y-3">
          <%= form_with url: api_v1_llm_jobs_path, method: :post, local: false, id: "run-job-form", class: "space-y-4" do |form| %>
            <%= hidden_field_tag "data[type]", "llm_job" %>
            <%= hidden_field_tag "data[attributes][template]", @template %>
            <%= hidden_field_tag "data[attributes][model]", @model %>
            <%= hidden_field_tag "data[attributes][context]", @context.to_json %>
            <%= hidden_field_tag "data[attributes][format]", @format %>
            
            <button type="submit" class="w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h1m4 0h1m6-6V7a2 2 0 00-2-2H4a2 2 0 00-2 2v12a2 2 0 002 2h14a2 2 0 002-2v-5"></path>
              </svg>
              Run This Job Now
            </button>
          <% end %>
          
          <button type="button" onclick="copyEstimation()" class="w-full inline-flex justify-center items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
            </svg>
            Copy Estimation Data
          </button>
        </div>
      </div>
    </div>

    <!-- Right Column: Prompt Preview -->
    <div class="space-y-6">
      <!-- Interpolated Prompt -->
      <div class="bg-white shadow rounded-lg p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Generated Prompt</h3>
        <div class="bg-gray-50 rounded p-4 border">
          <pre class="whitespace-pre-wrap text-sm text-gray-700 font-mono"><%= @estimation[:prompt] %></pre>
        </div>
        <div class="mt-3 text-xs text-gray-500">
          Character count: <%= @estimation[:prompt].length %> | Estimated tokens: <%= @estimation[:input_tokens] %>
        </div>
      </div>

      <!-- Configuration Used -->
      <div class="bg-white shadow rounded-lg p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Configuration</h3>
        <dl class="space-y-3">
          <div>
            <dt class="text-sm font-medium text-gray-500">Template</dt>
            <dd class="mt-1 text-sm text-gray-900 bg-gray-50 p-2 rounded"><%= truncate(@template, length: 200) %></dd>
          </div>
          <div>
            <dt class="text-sm font-medium text-gray-500">Model</dt>
            <dd class="mt-1 text-sm text-gray-900"><%= @model %></dd>
          </div>
          <div>
            <dt class="text-sm font-medium text-gray-500">Format</dt>
            <dd class="mt-1 text-sm text-gray-900"><%= @format.capitalize %></dd>
          </div>
          <div>
            <dt class="text-sm font-medium text-gray-500">Context Variables</dt>
            <dd class="mt-1 text-sm text-gray-900 bg-gray-50 p-2 rounded font-mono"><%= @context.to_json %></dd>
          </div>
        </dl>
      </div>
    </div>
  </div>
</div>

<script>
// Run job form submission
document.getElementById('run-job-form').addEventListener('submit', function(e) {
  e.preventDefault();
  
  const formData = new FormData(this);
  const data = {};
  
  // Convert FormData to JSON structure
  for (let [key, value] of formData.entries()) {
    if (key.includes('[')) {
      // Handle nested keys like data[attributes][template]
      const keys = key.split(/[\[\]]+/).filter(k => k);
      let current = data;
      for (let i = 0; i < keys.length - 1; i++) {
        if (!current[keys[i]]) current[keys[i]] = {};
        current = current[keys[i]];
      }
      // Parse JSON for context
      if (keys[keys.length - 1] === 'context') {
        current[keys[keys.length - 1]] = JSON.parse(value);
      } else {
        current[keys[keys.length - 1]] = value;
      }
    } else {
      data[key] = value;
    }
  }
  
  fetch('/api/v1/llm_jobs', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
    },
    body: JSON.stringify(data)
  })
  .then(response => response.json())
  .then(data => {
    if (data.data) {
      alert('Job queued successfully! Job ID: ' + data.data.id);
      // Could redirect to job status page
    } else {
      alert('Error queuing job: ' + (data.errors ? data.errors[0].detail : 'Unknown error'));
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert('Error queuing job: ' + error.message);
  });
});

function copyEstimation() {
  const estimation = {
    template: '<%= @template %>',
    model: '<%= @model %>',
    format: '<%= @format %>',
    context: <%= @context.to_json %>,
    estimation: <%= @estimation.to_json %>
  };
  
  navigator.clipboard.writeText(JSON.stringify(estimation, null, 2)).then(function() {
    alert('Estimation data copied to clipboard!');
  }, function(err) {
    console.error('Could not copy text: ', err);
    alert('Failed to copy estimation data');
  });
}
</script>