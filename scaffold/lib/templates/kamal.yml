# kamal.yml - Kamal deployment configuration for Rails SaaS Starter Template
# Documentation: https://kamal-deploy.org/docs/configuration

service: rails-saas-starter
image: your-registry/rails-saas-starter

# Server configuration
servers:
  web:
    hosts:
      - 192.168.1.1  # Replace with your server IP
    labels:
      traefik.http.routers.web.rule: Host(`your-domain.com`)
      traefik.http.routers.web.tls.certresolver: letsencrypt
  workers:
    hosts:
      - 192.168.1.1  # Replace with your server IP (can be same as web)
    cmd: bundle exec sidekiq

# Docker registry configuration
registry:
  # Configure your container registry (Docker Hub, GitHub Container Registry, etc.)
  server: ghcr.io
  username: your-username
  password:
    - KAMAL_REGISTRY_PASSWORD

# Build configuration
builder:
  multiarch: false
  args:
    RUBY_VERSION: 3.2.0
  secrets:
    - RAILS_MASTER_KEY

# Environment variables
env:
  clear:
    RAILS_ENV: production
    RAILS_LOG_TO_STDOUT: true
    RAILS_SERVE_STATIC_FILES: true
    APP_HOST: your-domain.com
    APP_NAME: Rails SaaS Starter
    FEATURE_AI_ENABLED: true
    FEATURE_BILLING_ENABLED: true
    FEATURE_CMS_ENABLED: true
  secret:
    - SECRET_KEY_BASE
    - RAILS_MASTER_KEY
    - DATABASE_URL
    - REDIS_URL
    - OPENAI_API_KEY
    - ANTHROPIC_API_KEY
    - STRIPE_PUBLISHABLE_KEY
    - STRIPE_SECRET_KEY
    - STRIPE_WEBHOOK_SECRET
    - GOOGLE_CLIENT_ID
    - GOOGLE_CLIENT_SECRET
    - GITHUB_CLIENT_ID
    - GITHUB_CLIENT_SECRET
    - SLACK_CLIENT_ID
    - SLACK_CLIENT_SECRET
    - SMTP_HOST
    - SMTP_USERNAME
    - SMTP_PASSWORD
    - FROM_EMAIL

# Health check configuration
healthcheck:
  path: /health
  port: 3000
  max_attempts: 7
  interval: 20s

# Traefik reverse proxy configuration
traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.tlsChallenge: true
    certificatesResolvers.letsencrypt.acme.email: admin@your-domain.com
    certificatesResolvers.letsencrypt.acme.storage: /letsencrypt/acme.json

# Asset and volume configuration
asset_path: /rails/public/assets
volumes:
  - "/var/lib/rails/storage:/rails/storage"

# Database and Redis (as accessories)
accessories:
  postgres:
    image: postgres:15
    host: 192.168.1.1  # Replace with your database server IP
    port: 5432
    env:
      clear:
        POSTGRES_USER: rails_saas
        POSTGRES_DB: rails_saas_production
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data
    cmd: postgres -c shared_preload_libraries=vector
    
  redis:
    image: redis:7
    host: 192.168.1.1  # Replace with your Redis server IP
    port: 6379
    directories:
      - data:/data
    cmd: redis-server --appendonly yes

# SSH configuration
ssh:
  user: deploy
  
# Boot configuration
boot:
  limit: 10  # Limit concurrent boots
  wait: 2    # Seconds between boots

# Deployment hooks
deploy:
  # Run database migrations during deployment
  hooks:
    pre-connect:
      - docker exec $CONTAINER_NAME bin/rails db:prepare
    post-deploy:
      - docker exec $CONTAINER_NAME bin/rails log:clear
      
# Logging configuration
logging:
  driver: json-file
  options:
    max-size: "10m"
    max-file: "3"