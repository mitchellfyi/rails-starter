<%= form_with model: prompt_template, local: true, class: 'space-y-6' do |form| %>
  <% if prompt_template.errors.any? %>
    <div class="rounded-md bg-red-50 p-4">
      <div class="flex">
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            <%= pluralize(prompt_template.errors.count, "error") %> prohibited this template from being saved:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul role="list" class="list-disc pl-5 space-y-1">
              <% prompt_template.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
    <div>
      <%= form.label :name, class: 'block text-sm font-medium text-gray-700' %>
      <%= form.text_field :name, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500' %>
    </div>

    <div>
      <%= form.label :slug, class: 'block text-sm font-medium text-gray-700' %>
      <%= form.text_field :slug, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500', placeholder: 'Leave blank to auto-generate' %>
      <p class="mt-1 text-sm text-gray-500">Used for API access and referencing</p>
    </div>
  </div>

  <div>
    <%= form.label :description, class: 'block text-sm font-medium text-gray-700' %>
    <%= form.text_area :description, rows: 3, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500' %>
    <p class="mt-1 text-sm text-gray-500">Describe what this prompt template does</p>
  </div>

  <div>
    <%= form.label :prompt_body, 'Prompt Template', class: 'block text-sm font-medium text-gray-700' %>
    <%= form.text_area :prompt_body, rows: 10, class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 font-mono text-sm', placeholder: 'Enter your prompt template here. Use {{variable_name}} for variables.' %>
    <p class="mt-1 text-sm text-gray-500">Use <code>{{variable_name}}</code> syntax for variables that will be replaced at runtime</p>
  </div>

  <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
    <div>
      <%= form.label :output_format, class: 'block text-sm font-medium text-gray-700' %>
      <%= form.select :output_format, 
            options_for_select(%w[text json markdown html].map { |f| [f.humanize, f] }, prompt_template.output_format),
            {},
            { class: 'mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500' } %>
    </div>

    <div class="flex items-center">
      <div class="flex items-center h-5">
        <%= form.check_box :active, class: 'h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded' %>
      </div>
      <div class="ml-3 text-sm">
        <%= form.label :active, 'Active', class: 'font-medium text-gray-700' %>
        <p class="text-gray-500">Whether this template is available for use</p>
      </div>
    </div>
  </div>

  <div>
    <%= form.label :tags, class: 'block text-sm font-medium text-gray-700' %>
    <div id="tags-container" class="mt-1">
      <div class="flex flex-wrap gap-2 mb-2" id="current-tags">
        <% (prompt_template.tags || []).each_with_index do |tag, index| %>
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
            <%= tag %>
            <%= form.hidden_field :tags, multiple: true, value: tag, id: "tags_#{index}" %>
            <button type="button" onclick="removeTag(this)" class="ml-1 text-blue-600 hover:text-blue-800">×</button>
          </span>
        <% end %>
      </div>
      <div class="flex">
        <input type="text" id="new-tag" placeholder="Add a tag" class="flex-1 rounded-l-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        <button type="button" onclick="addTag()" class="px-4 py-2 border border-l-0 border-gray-300 rounded-r-md bg-gray-50 text-gray-600 hover:bg-gray-100">
          Add
        </button>
      </div>
    </div>
    <p class="mt-1 text-sm text-gray-500">Press Enter or click Add to add tags</p>
  </div>

  <div class="flex justify-end space-x-3">
    <%= link_to 'Cancel', prompt_templates_path, class: 'bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500' %>
    <%= form.submit class: 'ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500' %>
  </div>
<% end %>

<script>
  let tagIndex = <%= (prompt_template.tags || []).length %>;

  function addTag() {
    const input = document.getElementById('new-tag');
    const tag = input.value.trim();
    
    if (tag && !isDuplicateTag(tag)) {
      const container = document.getElementById('current-tags');
      const tagElement = document.createElement('span');
      tagElement.className = 'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800';
      tagElement.innerHTML = `
        ${tag}
        <input type="hidden" name="prompt_template[tags][]" value="${tag}" id="tags_${tagIndex}">
        <button type="button" onclick="removeTag(this)" class="ml-1 text-blue-600 hover:text-blue-800">×</button>
      `;
      container.appendChild(tagElement);
      input.value = '';
      tagIndex++;
    }
  }

  function removeTag(button) {
    button.parentElement.remove();
  }

  function isDuplicateTag(newTag) {
    const existingTags = document.querySelectorAll('#current-tags input[type="hidden"]');
    return Array.from(existingTags).some(input => input.value === newTag);
  }

  // Add tag on Enter key
  document.getElementById('new-tag').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      e.preventDefault();
      addTag();
    }
  });
</script>