<!-- Doctor Tool Header -->
<div class="mb-8">
  <h1 class="text-3xl font-bold text-gray-900">Doctor Tool</h1>
  <p class="mt-2 text-gray-600">Comprehensive diagnostics and health checks for your Rails application</p>
</div>

<!-- Quick Actions -->
<div class="mb-6">
  <div class="flex space-x-3">
    <button id="run-diagnostics" class="btn btn-primary">
      <svg class="btn-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
      </svg>
      Run Full Diagnostics
    </button>
    
    <button id="run-quick-check" class="btn btn-secondary">
      <svg class="btn-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
      </svg>
      Quick Check
    </button>
  </div>
</div>

<!-- Overall Health Status -->
<div class="mb-8">
  <div class="card">
    <div class="flex items-center justify-between">
      <div>
        <h2 class="text-lg font-semibold text-gray-900">System Health</h2>
        <p class="text-gray-600">Overall status of your Rails application</p>
      </div>
      <div class="text-right">
        <% 
          errors = @diagnostics.count { |d| d[:level] == 'error' }
          warnings = @diagnostics.count { |d| d[:level] == 'warning' }
          
          if errors > 0
            status_class = 'status-offline'
            status_text = 'Critical Issues'
          elsif warnings > 0
            status_class = 'status-warning'
            status_text = 'Warnings Found'
          else
            status_class = 'status-online'
            status_text = 'Healthy'
          end
        %>
        <span class="<%= status_class %>"><%= status_text %></span>
        <p class="text-sm text-gray-500 mt-1">
          <%= errors %> errors, <%= warnings %> warnings
        </p>
      </div>
    </div>
  </div>
</div>

<!-- Diagnostics Results -->
<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
  <!-- Main Results -->
  <div class="lg:col-span-2">
    <div class="card">
      <h2 class="text-lg font-semibold text-gray-900 mb-6">Diagnostic Results</h2>
      
      <!-- Loading State -->
      <div id="diagnostics-loading" class="hidden text-center py-8">
        <div class="inline-flex items-center px-4 py-2 text-blue-600">
          <svg class="animate-spin -ml-1 mr-3 h-5 w-5" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Running diagnostics...
        </div>
      </div>
      
      <!-- Results -->
      <div id="diagnostics-results">
        <% if @diagnostics.any? %>
          <% @diagnostics.group_by { |d| d[:category] }.each do |category, checks| %>
            <div class="mb-6">
              <h3 class="text-md font-medium text-gray-900 mb-3"><%= category %></h3>
              <div class="space-y-3">
                <% checks.each do |check| %>
                  <div class="diagnostic-item border rounded-lg p-4">
                    <div class="flex items-start justify-between">
                      <div class="flex items-start">
                        <div class="flex-shrink-0 mt-0.5">
                          <% case check[:level] %>
                          <% when 'error' %>
                            <svg class="h-5 w-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
                            </svg>
                          <% when 'warning' %>
                            <svg class="h-5 w-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                            </svg>
                          <% when 'success' %>
                            <svg class="h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                            </svg>
                          <% else %>
                            <svg class="h-5 w-5 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                            </svg>
                          <% end %>
                        </div>
                        <div class="ml-3">
                          <h4 class="text-sm font-medium text-gray-900"><%= check[:title] %></h4>
                          <p class="text-sm text-gray-600"><%= check[:description] %></p>
                          <% if check[:fix_command] %>
                            <code class="text-xs bg-gray-100 px-2 py-1 rounded mt-1 inline-block">
                              <%= check[:fix_command] %>
                            </code>
                          <% end %>
                        </div>
                      </div>
                      
                      <% if check[:fixable] %>
                        <button class="fix-btn btn btn-sm btn-primary ml-4" 
                                data-issue="<%= check[:category].downcase %>_<%= check[:title].downcase.gsub(/\s+/, '_') %>">
                          <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"/>
                          </svg>
                          Fix
                        </button>
                      <% end %>
                    </div>
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>
        <% else %>
          <div class="text-center py-8">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">No diagnostics run yet</h3>
            <p class="mt-1 text-sm text-gray-500">
              Click "Run Full Diagnostics" to analyze your application
            </p>
          </div>
        <% end %>
      </div>
    </div>
  </div>
  
  <!-- Sidebar -->
  <div class="space-y-6">
    <!-- Quick Fixes -->
    <% if @available_fixes.any? %>
      <div class="card">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Available Fixes</h3>
        <div class="space-y-2">
          <% @available_fixes.each do |fix| %>
            <div class="flex items-center justify-between p-2 border rounded">
              <code class="text-sm text-gray-600"><%= fix %></code>
              <button class="btn btn-sm btn-secondary">Run</button>
            </div>
          <% end %>
        </div>
      </div>
    <% end %>
    
    <!-- Recent Runs -->
    <% if @recent_runs.any? %>
      <div class="card">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Recent Runs</h3>
        <div class="space-y-2">
          <% @recent_runs.each do |run| %>
            <div class="p-3 border rounded-lg">
              <div class="flex items-center justify-between mb-2">
                <span class="text-sm font-medium">Doctor Run</span>
                <span class="text-xs text-gray-500">
                  <%= Time.parse(run['timestamp']).strftime('%m/%d %H:%M') %>
                </span>
              </div>
              <% if run['metadata'] && run['metadata']['issues_found'] %>
                <p class="text-xs text-gray-600">
                  <%= run['metadata']['issues_found'] %> issues found
                </p>
              <% end %>
            </div>
          <% end %>
        </div>
      </div>
    <% end %>
    
    <!-- Tips -->
    <div class="card">
      <h3 class="text-lg font-semibold text-gray-900 mb-4">Health Tips</h3>
      <div class="space-y-3 text-sm text-gray-600">
        <p>• Run diagnostics regularly to catch issues early</p>
        <p>• Keep your context fresh with <code>railsplan index</code></p>
        <p>• Update Ruby and Rails versions for security</p>
        <p>• Add tests to improve code quality</p>
        <p>• Monitor for N+1 queries in associations</p>
      </div>
    </div>
  </div>
</div>

<!-- JavaScript for Doctor Tool -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const runBtn = document.getElementById('run-diagnostics');
  const quickBtn = document.getElementById('run-quick-check');
  const loadingState = document.getElementById('diagnostics-loading');
  const resultsContainer = document.getElementById('diagnostics-results');
  
  // Run diagnostics
  runBtn.addEventListener('click', function() {
    runDiagnostics(false);
  });
  
  quickBtn.addEventListener('click', function() {
    runDiagnostics(true);
  });
  
  function runDiagnostics(quickMode) {
    showLoading();
    
    fetch('<%= railsplan_web.run_doctor_path %>', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ quick: quickMode })
    })
    .then(response => response.json())
    .then(data => {
      hideLoading();
      
      if (data.success) {
        updateResults(data.diagnostics, data.summary);
      } else {
        showError(data.error || 'Diagnostics failed');
      }
    })
    .catch(error => {
      hideLoading();
      showError('Network error: ' + error.message);
    });
  }
  
  function showLoading() {
    loadingState.classList.remove('hidden');
    runBtn.disabled = true;
    quickBtn.disabled = true;
  }
  
  function hideLoading() {
    loadingState.classList.add('hidden');
    runBtn.disabled = false;
    quickBtn.disabled = false;
  }
  
  function updateResults(diagnostics, summary) {
    // Update the results container with new diagnostics
    // For now, just reload the page to show updated results
    location.reload();
  }
  
  function showError(message) {
    alert('Error: ' + message);
  }
  
  // Fix buttons
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('fix-btn') || e.target.closest('.fix-btn')) {
      const btn = e.target.classList.contains('fix-btn') ? e.target : e.target.closest('.fix-btn');
      const issueType = btn.dataset.issue;
      
      if (!confirm('Are you sure you want to apply this fix?')) {
        return;
      }
      
      btn.disabled = true;
      btn.innerHTML = '<svg class="animate-spin w-4 h-4 mr-1" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Fixing...';
      
      fetch('<%= railsplan_web.fix_doctor_path %>', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        },
        body: JSON.stringify({ issue_type: issueType })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert(data.message || 'Fix applied successfully!');
          location.reload();
        } else {
          alert('Fix failed: ' + (data.error || 'Unknown error'));
        }
      })
      .catch(error => {
        alert('Network error: ' + error.message);
      })
      .finally(() => {
        btn.disabled = false;
        btn.innerHTML = '<svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"/></svg>Fix';
      });
    }
  });
});
</script>