<!-- Prompt History Header -->
<div class="mb-8">
  <h1 class="text-3xl font-bold text-gray-900">Prompt History</h1>
  <p class="mt-2 text-gray-600">Review and replay your AI interactions</p>
</div>

<!-- Stats Overview -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
  <div class="stat-card">
    <div class="flex items-center">
      <div class="flex-shrink-0">
        <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
          <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
          </svg>
        </div>
      </div>
      <div class="ml-4">
        <p class="text-sm font-medium text-gray-500">Total Prompts</p>
        <p class="text-2xl font-semibold text-gray-900"><%= @stats[:total] %></p>
      </div>
    </div>
  </div>

  <div class="stat-card">
    <div class="flex items-center">
      <div class="flex-shrink-0">
        <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
          <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
      </div>
      <div class="ml-4">
        <p class="text-sm font-medium text-gray-500">Today</p>
        <p class="text-2xl font-semibold text-gray-900"><%= @stats[:today] %></p>
      </div>
    </div>
  </div>

  <div class="stat-card">
    <div class="flex items-center">
      <div class="flex-shrink-0">
        <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
          <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
          </svg>
        </div>
      </div>
      <div class="ml-4">
        <p class="text-sm font-medium text-gray-500">Success Rate</p>
        <p class="text-2xl font-semibold text-gray-900"><%= @stats[:success_rate] %>%</p>
      </div>
    </div>
  </div>

  <div class="stat-card">
    <div class="flex items-center">
      <div class="flex-shrink-0">
        <div class="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
          <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"/>
          </svg>
        </div>
      </div>
      <div class="ml-4">
        <p class="text-sm font-medium text-gray-500">Most Used</p>
        <% most_used = @stats[:by_type].max_by { |k, v| v } %>
        <p class="text-lg font-semibold text-gray-900">
          <%= most_used ? most_used[0].capitalize : 'N/A' %>
        </p>
      </div>
    </div>
  </div>
</div>

<!-- Prompt Types Filter -->
<div class="mb-6">
  <div class="flex flex-wrap gap-2">
    <button class="filter-btn active px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800" data-type="all">
      All Types
    </button>
    <% @stats[:by_type].each do |type, count| %>
      <button class="filter-btn px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-700 hover:bg-gray-200" data-type="<%= type %>">
        <%= type.capitalize %> (<%= count %>)
      </button>
    <% end %>
  </div>
</div>

<!-- Prompts List -->
<div class="card">
  <% if @prompts.any? %>
    <div class="space-y-4" id="prompts-list">
      <% @prompts.each do |prompt| %>
        <div class="prompt-item border rounded-lg p-4 hover:bg-gray-50" data-type="<%= prompt.dig('metadata', 'type') || 'unknown' %>">
          <div class="flex items-start justify-between">
            <div class="flex-1">
              <div class="flex items-center space-x-2 mb-2">
                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">
                  <%= (prompt.dig('metadata', 'type') || 'unknown').capitalize %>
                </span>
                <span class="text-xs text-gray-500">
                  <%= Time.parse(prompt['timestamp']).strftime('%B %d, %Y at %I:%M %p') %>
                </span>
              </div>
              
              <p class="text-gray-900 mb-2"><%= prompt['prompt'] %></p>
              
              <% if prompt['response'] && prompt['response'].is_a?(Hash) %>
                <% if prompt['response']['error'] %>
                  <div class="text-red-600 text-sm">
                    ❌ Error: <%= prompt['response']['error'] %>
                  </div>
                <% else %>
                  <div class="text-green-600 text-sm">
                    ✅ Completed successfully
                  </div>
                <% end %>
              <% end %>
              
              <% if prompt.dig('metadata', 'files_generated')&.any? %>
                <div class="mt-2">
                  <p class="text-xs text-gray-500">Files generated:</p>
                  <div class="flex flex-wrap gap-1 mt-1">
                    <% prompt['metadata']['files_generated'].first(3).each do |file| %>
                      <span class="inline-flex items-center px-2 py-0.5 rounded text-xs bg-gray-100 text-gray-600">
                        <%= File.basename(file) %>
                      </span>
                    <% end %>
                    <% if prompt['metadata']['files_generated'].length > 3 %>
                      <span class="text-xs text-gray-500">+<%= prompt['metadata']['files_generated'].length - 3 %> more</span>
                    <% end %>
                  </div>
                </div>
              <% end %>
            </div>
            
            <div class="flex space-x-2 ml-4">
              <%= link_to railsplan_web.prompt_path(prompt['id']), class: "btn btn-sm btn-secondary" do %>
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                </svg>
                View
              <% end %>
              
              <button class="replay-btn btn btn-sm btn-primary" data-prompt-id="<%= prompt['id'] %>">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                </svg>
                Replay
              </button>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  <% else %>
    <div class="text-center py-12">
      <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"/>
      </svg>
      <h3 class="mt-2 text-sm font-medium text-gray-900">No prompts yet</h3>
      <p class="mt-1 text-sm text-gray-500">
        Start using AI features to see your history here.
      </p>
      <div class="mt-6">
        <%= link_to "Generate Code", railsplan_web.generate_path, class: "btn btn-primary" %>
      </div>
    </div>
  <% end %>
</div>

<!-- JavaScript for filtering and replay -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Filter functionality
  const filterBtns = document.querySelectorAll('.filter-btn');
  const promptItems = document.querySelectorAll('.prompt-item');
  
  filterBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const filterType = this.dataset.type;
      
      // Update active button
      filterBtns.forEach(b => b.classList.remove('active', 'bg-blue-100', 'text-blue-800'));
      filterBtns.forEach(b => b.classList.add('bg-gray-100', 'text-gray-700'));
      this.classList.add('active', 'bg-blue-100', 'text-blue-800');
      this.classList.remove('bg-gray-100', 'text-gray-700');
      
      // Filter prompts
      promptItems.forEach(item => {
        const itemType = item.dataset.type;
        if (filterType === 'all' || itemType === filterType) {
          item.style.display = 'block';
        } else {
          item.style.display = 'none';
        }
      });
    });
  });
  
  // Replay functionality
  const replayBtns = document.querySelectorAll('.replay-btn');
  
  replayBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const promptId = this.dataset.promptId;
      
      if (!confirm('Are you sure you want to replay this prompt?')) {
        return;
      }
      
      this.disabled = true;
      this.innerHTML = '<svg class="animate-spin w-4 h-4 mr-1" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Replaying...';
      
      fetch('<%= railsplan_web.replay_prompt_path(':id') %>'.replace(':id', promptId), {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert(data.message || 'Prompt replayed successfully!');
        } else {
          alert('Replay failed: ' + (data.error || 'Unknown error'));
        }
      })
      .catch(error => {
        alert('Network error: ' + error.message);
      })
      .finally(() => {
        this.disabled = false;
        this.innerHTML = '<svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/></svg>Replay';
      });
    });
  });
});
</script>